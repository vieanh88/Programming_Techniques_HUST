#include <iostream> 
using namespace std;
struct Node { 
    int data; 
    Node* next;

    Node(int data) {
        this->data = data;
        next = NULL;
    }
};

// push a new element to the beginning of the list
Node* prepend(Node* head, int data) {
    Node* q_07 = new Node(data);  // T·∫°o m·ªôt node m·ªõi v·ªõi gi√° tr·ªã data
    if(head == NULL) return q_07;
    q_07->next = head;  // Li√™n k·∫øt node m·ªõi v·ªõi head hi·ªán t·∫°i
    head = q_07;
    return head;
}
// Ho v‡ ten: Nguyen Viet Anh
// MSSV: 20215307

// print the list content on a line
void print(Node* head) {
    Node* p_07 = head;
    if(head == NULL) return;  // N·∫øu danh s√°ch r·ªóng, tho√°t kh·ªèi h√†m
    while(p_07 != NULL) {
        cout << p_07->data << ' ';  // In gi√° tr·ªã c·ªßa node hi·ªán t·∫°i
        p_07 = p_07->next;  // Di chuy·ªÉn t·ªõi node ti·∫øp theo
    }
    return;
}
// Ho v‡ ten: Nguyen Viet Anh
// MSSV: 20215307

// return the new head of the reversed list
Node* reverse(Node* head) {
    if(head == NULL) return NULL;  // N·∫øu danh s√°ch r·ªóng, tr·∫£ v·ªÅ NULL
    if(head->next == NULL) return head;  // N·∫øu danh s√°ch ch·ªâ c√≥ m·ªôt ph·∫ßn t·ª≠, tr·∫£ v·ªÅ head
    Node* p1 = head;  // Kh·ªüi t·∫°o p1 l√† head
    Node* p2 = head->next;  // Kh·ªüi t·∫°o p2 l√† node th·ª© hai
    p1->next = NULL;  // Ng·∫Øt li√™n k·∫øt c·ªßa node ƒë·∫ßu ti√™n
    while(p2 != NULL) {
        Node* tmp = p2->next;  // L∆∞u tr·ªØ node ti·∫øp theo
        p2->next = p1;  // ƒê·∫£o ng∆∞·ª£c li√™n k·∫øt
        p1 = p2;
        p2 = tmp;
    }
    head = p1;  // C·∫≠p nh·∫≠t head m·ªõi
    return head;  // Tr·∫£ v·ªÅ head m·ªõi
}
// Ho v‡ ten: Nguyen Viet Anh
// MSSV: 20215307

int main() {
    int n, u;
    cin >> n;
    Node* head = NULL;
    for (int i = 0; i < n; ++i) {
        cin >> u; 
        head = prepend(head, u);
    } 
    
    cout << "Original list: ";
    print(head);

    head = reverse(head);
    cout << endl;
    cout << "Reversed list: ";
    print(head);

    return 0; 
}
